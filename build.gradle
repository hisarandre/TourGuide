buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.6.RELEASE")
    }
}

plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "jacoco"
}

jar {
    archiveBaseName = 'tourGuide'
    archiveVersion = '1.0.0'
}

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation group: 'org.javamoney', name: 'moneta', version: '1.3'
    implementation group: 'com.jsoniter', name: 'jsoniter', version: '0.9.23'

    implementation files('libs/gpsUtil.jar')
    implementation files('libs/RewardCentral.jar')
    implementation files('libs/TripPricer.jar')

    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.1.6.RELEASE'

    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
}


jacoco {
    toolVersion = '0.8.9'
}

jacocoTestReport {
    reports {
        xml.enabled = true
        csv.enabled = false
        html.destination file("${buildDir}/jacocoHtml")
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: [
                            '**/tourGuide/model/**',
                            '**/tourGuide/dto/**'
                    ]
            )
        }))
    }
}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.5
            }
        }
    }
}
